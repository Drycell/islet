name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: [ code-default ]
    container: art.sec.samsung.net/docker-remote/rust:latest

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'true'

    - name: Install sudo
      run: |
        apt update && apt install sudo

    - name: Run scripts/init.sh
      run: ./scripts/init.sh

    - name: Run scripts/build.sh
      run: ./scripts/build.sh

    - name: Archive binaries
      uses: actions/upload-artifact@v2
      with:
        name: binaries
        path: |
          out/*.bin

  test:
    runs-on: [ code-default ]
    container:
      image: art.sec.samsung.net/docker-remote/rust:latest
      options: --security-opt seccomp=unconfined

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'true'

    - name: Install sudo
      run: |
        apt update && apt install sudo

    - name: Run scripts/init.sh
      run: ./scripts/init.sh

    - name: Run scripts/test.sh --unit-test
      run: ./scripts/test.sh --unit-test

    - name: Publish unit test results
      uses: code-actions/EnricoMi-publish-unit-test-result-action@v1
      if: always()
      with:
        files: out/test.xml

    - name: Run scripts/test.sh --coverage
      if: always()
      run: ./scripts/test.sh --coverage

    - name: Archive junit
      uses: actions/upload-artifact@v2
      if: always()
      with:
        name: test results
        path: |
          out/test.xml

    - name: Archive badges
      uses: actions/upload-artifact@v2
      if: always()
      with:
        name: badge
        path: |
          out/*.svg

  badge:
    needs: test
    if: always() && github.event_name == 'push' 
    runs-on: [ code-default ]

    steps:
    - name: Install inkscape
      run: |
        apt install -y -qq --no-install-recommends inkscape

    - uses: actions/download-artifact@v2
      with:
        name: badge

    - name: Upload badge to artifactories
      env:
        ART_KEY: ${{ secrets.ART_KEY }}
      run: |
        ls -lah .
        inkscape -e test.png test.svg
        curl -H "X-JFrog-Art-Api:${ART_KEY}" -T test.png https://art.sec.samsung.net/artifactory/rs8-dsca-da_generic/status/arm-cca/test.png
        inkscape -e coverage.png coverage.svg
        curl -H "X-JFrog-Art-Api:${ART_KEY}" -T coverage.png https://art.sec.samsung.net/artifactory/rs8-dsca-da_generic/status/arm-cca/coverage.png

